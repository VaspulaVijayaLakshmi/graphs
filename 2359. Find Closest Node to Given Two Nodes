#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    void computeDistances(int start, vector<int> &edges, vector<int> &dist) {
        int n = edges.size();
        dist.assign(n, -1);
        int curr = start;
        int d = 0;
        while (curr != -1 && dist[curr] == -1) {
            dist[curr] = d++;
            curr = edges[curr];
        }
    }

    int closestMeetingNode(vector<int>& edges, int node1, int node2) {
        int n = edges.size();
        vector<int> dist1, dist2;

        computeDistances(node1, edges, dist1);
        computeDistances(node2, edges, dist2);

        int ans = -1;
        int bestDist = INT_MAX;

        for (int i = 0; i < n; i++) {
            if (dist1[i] != -1 && dist2[i] != -1) {
                int maxDist = max(dist1[i], dist2[i]);
                if (maxDist < bestDist) {
                    bestDist = maxDist;
                    ans = i;
                }
            }
        }
        return ans;
    }
};
