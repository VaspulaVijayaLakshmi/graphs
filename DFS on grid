bool isValid(int row,int col,int M,int N){

if(row<0 || row>=N || col<0 || col>=M ) return false;

if(vis[row][col]) return false;

return true;

}





void dfs( row,col,vis){

vis[row][col]=true;

//we need to check the validity of all 4 possibilities



//check if we can go  top
if(isValid[row-1][col]) dfs();

//check if we can go  bottom
if(isValid[row+1][col]) dfs();

//check if we can go  left
if(isValid[row][col-1]) dfs();

//check if we can go  right
if(isValid[row][col+1]) dfs();



}





//instead of writing 4 dfs calls we can put this in a for loop

cordinates: {top,bottom,left,right}

eg: x={-1,+1,0,0}
    y={0,0,-1,+1} 
   
   
 Thsi whole can be reduced to :
 
 
   
   for(int i=0;i<4;i++){
   
   if(isValid(row+x[i],col+y[i])
      dfs(row+dx[i],col+dy[i],vis);
   }
   
