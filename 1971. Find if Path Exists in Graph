class Solution {
public:

    bool dfs(vector<vector<int>> &adj,int src,int des,vector<bool> &vis){

       vis[src]=true;

       if(src==des)
       return true;

       for(int child: adj[src]){

        if(!vis[child]){
            if(dfs(adj,child,des,vis))
              return true;
        }
       }

       return false;

    }
     

    bool validPath(int n, vector<vector<int>>& edges, int src, int des) {

        vector<vector<int>> adj;
        int n=edges.size();

        for(int i=0;i<n;i++){

            adj[edges[i][0]].push_back(edgs[i][1]);
            adj[edgs[i][1]].push_back(edges[i][0]);
        }

        vector<bool> vis(n,false);

        return dfs(adj,src,des,vis);
        
    }
};
