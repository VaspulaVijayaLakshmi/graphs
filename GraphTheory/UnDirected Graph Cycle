class Solution {
  public:
    
    bool dfs(vector<vector<int>>& adj, int node,int par,vector<bool> & vis){
        
        vis[node] = true;
        
        for(int child:adj[node]){
            
            if(!vis[child])
              if(dfs(adj,child,node,vis)) return true;
              
            else if( child != par) return true;
               
        }
        
        return false;
        
    }  
  
    bool isCycle(int V, vector<vector<int>>& edges) {
        // Code here
        
        
        vector<vector<int>> adj(V);
        
        for(int i=0;i<edges.size();i++){
            
            int u=edges[i][0];
            int v=edges[i][1];
            
            adj[u].push_back(v);
            adj[v].push_back(u);
            
           
        }
        
        vector<bool> vis(V,false);
        
        for(int i=0;i<V;i++){
            
        if(!vis[i])            
           if(dfs(adj,i,-1,vis))
              return true;
        }          
        
        return false;
    }
};


