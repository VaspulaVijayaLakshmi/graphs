class Solution {
public:
    int numOfMinutes(int n, int headID, vector<int>& manager, vector<int>& informTime) {
        
        vector<vector<int>> man(n);
        int maxi=0;

        for(int i=0;i<n;i++){

            if (manager[i] != -1) 
            man[manager[i]].push_back(i);
        }

         queue<pair<int,int>> q; 
         q.push({headID,0});

         while(!q.empty()){

             int emp = q.front().first;
             int t = q.front().second;
             q.pop();

             int dur = t + informTime[emp];
             maxi = max(maxi,dur);

            for(int child: man[emp]){
                    q.push({child, dur});
            
            }
         }

         return maxi;
   
    }
};

// headId - 2 
// Manager - 3

//           2 - -1 
//           3 - 2

//           0 - 3
//           1 - 3
//           4 - 3
//           5 - 3

//                         2(2)
//                          |
//                         3(1)
//                 /     /     \    \
//                0(0)  1(0)  4(0)  5(0)

//                3 - inform time


//             //    inform times - [0,0,2,1,0,0]


//                lets say infortime of [3 - 1]
//                                      [2 - 2]

//                                      s0 total time is -3 mins 


//                we need inform time of 3 , so tht all his subordinated would be covered




           
// EG2: 

//  0 1 2  3 4 5
// [2,2,-1,2,2,2]


//                 2(1)
//                  |
//       0(0)  1(0) 3(0) 4(0) 5(0)  


// number of minutes needed to inform all the employees - BFS
                  

