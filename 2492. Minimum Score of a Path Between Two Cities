#include <bits/stdc++.h>
using namespace std;

class Solution {
public:
    int minEdge = INT_MAX;
    vector<int> visited;
    vector<vector<pair<int,int>>> adj;

    void dfs(int u) {
        visited[u] = 1;
        for (auto &[v, w] : adj[u]) {
            minEdge = min(minEdge, w); // track smallest edge
            if (!visited[v]) {
                dfs(v);
            }
        }
    }

    int minScore(int n, vector<vector<int>>& roads) {
        adj.assign(n+1, {});
        visited.assign(n+1, 0);

        for (auto &r : roads) {
            int u = r[0], v = r[1], w = r[2];
            adj[u].push_back({v, w});
            adj[v].push_back({u, w});
        }

        dfs(1);
        return minEdge;
    }
};
